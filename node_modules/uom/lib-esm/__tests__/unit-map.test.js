import * as UnitMap from "../unit-map";
import * as BaseUnits from "../base-units";
var containsAll = function (arr1, arr2) { return arr2.every(function (arr2Item) { return arr1.indexOf(arr2Item) !== -1; }); };
var sameMembers = function (arr1, arr2) { return containsAll(arr1, arr2) && containsAll(arr2, arr1); };
describe("format_test", function () {
    test("Should get units for Length", function () {
        var expected = [
            BaseUnits.Meter,
        ];
        var actual = UnitMap.getUnitsForQuantity("Length", BaseUnits);
        expect(actual.length).toEqual(expected.length);
        expect(sameMembers(actual, expected)).toBeTruthy();
    });
    test("Should get units for length", function () {
        var expected = [
            BaseUnits.Meter,
        ];
        var actual = UnitMap.getUnitsForQuantity("length", BaseUnits);
        expect(actual.length).toEqual(expected.length);
        expect(sameMembers(actual, expected)).toBeTruthy();
    });
    // test("Should get units for length subset", () => {
    //   const expected = [BaseUnits.Meter];
    //   const actual = Format.getUnitsForQuantity(
    //     "length",
    //     {
    //       Meter: UnitsFormat.Meter
    //     },
    //     Units
    //   );
    //   expect(actual.length).toEqual(expected.length);
    //   console.dir(actual);
    //   expect(sameMembers(actual, expected)).toBeTruthy();
    // });
});
//# sourceMappingURL=unit-map.test.js.map