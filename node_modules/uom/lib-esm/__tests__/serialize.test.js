var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as Serialize from "../serialize";
import * as BaseUnits from "../base-units";
var baseUnitsLower = Object.keys(BaseUnits).reduce(function (soFar, current) {
    var _a;
    return __assign(__assign({}, soFar), (_a = {}, _a[current.toLowerCase()] = BaseUnits[current], _a));
}, {});
describe("serialize_test", function () {
    test("For Kelvin should return BaseUnits.Kelvin", function () {
        var unit = Serialize.stringToUnit("Kelvin", function (unitString) { return BaseUnits[unitString]; });
        expect(unit).toEqual(BaseUnits.Kelvin);
    });
    test("For kelvin should return BaseUnits.Kelvin", function () {
        var unit = Serialize.stringToUnit("kelvin", function (unitString) { return baseUnitsLower[unitString]; });
        expect(unit).toEqual(BaseUnits.Kelvin);
    });
});
//# sourceMappingURL=serialize.test.js.map