/**
 * Get all units registered for quantity
 * @param quantity
 */
export function getUnitsForQuantity(quantity, units) {
    var quantityToUnits = getUnitsPerQuantity(units);
    var unitsForQuantity = quantityToUnits[quantity.toLowerCase()];
    return unitsForQuantity || [];
}
// eslint-disable-next-line functional/no-let
var cache = {
    input: undefined,
    output: undefined,
};
function getUnitsPerQuantity(units) {
    if (cache.input === units && cache.output !== undefined) {
        return cache.output;
    }
    var quantityToUnits = {};
    for (var _i = 0, _a = Object.keys(units); _i < _a.length; _i++) {
        var unitKey = _a[_i];
        var unit = units[unitKey];
        var quantityKey = unit.quantity.toLowerCase();
        quantityToUnits[quantityKey] = (quantityToUnits[quantityKey] || []).concat(unit);
    }
    cache = {
        input: units,
        output: quantityToUnits,
    };
    return quantityToUnits;
}
//# sourceMappingURL=unit-map.js.map